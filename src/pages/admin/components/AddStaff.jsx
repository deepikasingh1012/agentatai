import React, { useState, useEffect } from "react";
import { addStaff } from "../../../services/AdminService";


const AddStaff = () => {
  const [name, setName] = useState("");
  const [email, setEmail] = useState("");
  const [phone, setPhone] = useState("");
  const [errors, setErrors] = useState({});
  const [loading, setLoading] = useState(false);
  const [modal, setModal] = useState({ show: false, message: "", onConfirm: null });


  const validateForm = () => {
    let newErrors = {};
    const nameRegex = /^[A-Za-z\s]{3,}$/;
    if (!nameRegex.test(name.trim())) newErrors.name = "Name must contain only letters and at least 3 characters.";
    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
    if (!emailRegex.test(email.trim())) newErrors.email = "Enter a valid email address.";
    const phoneRegex = /^[0-9]{10}$/;
    if (!phoneRegex.test(phone.trim())) newErrors.phone = "Phone number must be exactly 10 digits.";

    setErrors(newErrors);
    return Object.keys(newErrors).length === 0;
  };

const handleSubmit = async (e) => {
  e.preventDefault();
  if (!validateForm()) return;
  setLoading(true);

  const clientId = localStorage.getItem("clientId");

  const staffData = {
    p_action: "I", // ✅ Ensure correct action for insert
    p_user_id: 0, // API should generate user_id
    p_user_name: name.trim(),
    p_email: email.trim(),
    p_mobile: phone.trim(),
    p_profile_pic: "default_profile.jpg",
    p_status: 0,
    p_token: "autogeneratedtoken123",
    p_otp: "123456",
    p_is_verified: 0,
    p_is_available: 1,
    P_pannumber: "ABCDE1234F",
    p_DocPath: "/uploads/default_docs",
    p_role_abbreviation: "S",
    p_ClientId: clientId,
    p_page_size:0,
    p_page:0,
  };





  
  try {
    const response = await addStaff(staffData);
    console.log("✅ Staff Added:", response);
    setModal({
      show: true,
      message: "Staff added successfully!",
      onConfirm: () => {
        setName("");
        setEmail("");
        setPhone("");
        setModal({ show: false, message: "", onConfirm: null });
      },
    });
  }  catch (error) {
    console.error("❌ Failed to add staff:", error);
    setModal({
      show: true,
      message: "Failed to add staff. Please try again.",
      onConfirm: () => setModal({ show: false, message: "", onConfirm: null }),
    });
  } finally {
    setLoading(false);
  }
};

  return (
    <div className="container py-4 w-50">
      <h2 className="text-center mb-4">Add Staff</h2>

      <form onSubmit={handleSubmit}>
        <div className="mb-3">
          <label className="form-label">
            Name <span className="text-danger">*</span>
          </label>
          <input
            type="text"
            placeholder="Enter Full Name"
            className="form-control"
            value={name}
            onChange={(e) => setName(e.target.value)}
          />
          {errors.name && <div className="text-danger small mt-1">{errors.name}</div>}
        </div>

        <div className="mb-3">
          <label className="form-label">
            Email ID <span className="text-danger">*</span>
          </label>
          <input
            type="email"
            placeholder="Enter valid Email ID"
            className="form-control"
            value={email}
            onChange={(e) => setEmail(e.target.value)}
          />
          {errors.email && <div className="text-danger small mt-1">{errors.email}</div>}
        </div>

        <div className="mb-4">
          <label className="form-label">
            Phone Number <span className="text-danger">*</span>
          </label>
          <input
            type="text"
            placeholder="Enter phone number"
            className="form-control"
            value={phone}
            onChange={(e) => setPhone(e.target.value)}
          />
          {errors.phone && <div className="text-danger small mt-1">{errors.phone}</div>}
        </div>

        <div className="d-flex justify-content-center">
  <button type="submit" className="btn btn-primary w-50" disabled={loading}>
    {loading ? "Adding..." : "Add"}
  </button>
</div>

      </form>

      {modal.show && (
        <>
          <div className="modal-backdrop show"></div>
          <div className="modal d-block" tabIndex="-1" role="dialog">
            <div className="modal-dialog modal-dialog-centered" role="document">
              <div className="modal-content text-center">
                <div className="modal-body">
                  <p>{modal.message}</p>
                  <button className="btn btn-success mt-2" onClick={modal.onConfirm}>
                    Close
                  </button>
                </div>
              </div>
            </div>
          </div>
        </>
      )}
    </div>
  );
};

export default AddStaff;
